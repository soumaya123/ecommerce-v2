{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst items = localStorage.getItem(\"cartItems\") !== null ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst totalAmount = localStorage.getItem(\"totalAmount\") !== null ? JSON.parse(localStorage.getItem(\"totalAmount\")) : 0;\nconst totalQuantity = localStorage.getItem(\"totalQuantity\") !== null ? JSON.parse(localStorage.getItem(\"totalQuantity\")) : 0;\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\n};\nconst initialState = {\n  cartItems: items,\n  totalQuantity: totalQuantity,\n  totalAmount: totalAmount\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        var _newItem$color;\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n\n        state.cartItems.push({\n          id: newItem.id,\n          name: newItem.name,\n          image: newItem.image,\n          price: newItem.price,\n          color: (_newItem$color = newItem.color) === null || _newItem$color === void 0 ? void 0 : _newItem$color.name,\n          reference: newItem.reference,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      // console.log(action)\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","items","localStorage","getItem","JSON","parse","totalAmount","totalQuantity","setItemFunc","item","setItem","stringify","initialState","cartItems","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","id","_newItem$color","push","image","price","color","reference","quantity","totalPrice","Number","reduce","total","map","removeItem","filter","deleteItem","cartActions","actions"],"sources":["/home/soumayaites/Desktop/testecommerce/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst items =\r\n  localStorage.getItem(\"cartItems\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : [];\r\n\r\nconst totalAmount =\r\n  localStorage.getItem(\"totalAmount\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"totalAmount\"))\r\n    : 0;\r\n\r\nconst totalQuantity =\r\n  localStorage.getItem(\"totalQuantity\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"totalQuantity\"))\r\n    : 0;\r\n\r\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\r\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\r\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\r\n};\r\n\r\nconst initialState = {\r\n  cartItems: items,\r\n  totalQuantity: totalQuantity,\r\n  totalAmount: totalAmount,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // =========== add item ============\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.cartItems.find(\r\n        (item) => item.id === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n\r\n      if (!existingItem) {\r\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\r\n\r\n        state.cartItems.push({\r\n          id: newItem.id,\r\n          name: newItem.name,\r\n          image: newItem.image,\r\n          price: newItem.price,\r\n          color:newItem.color?.name,\r\n          reference:newItem.reference,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) + Number(newItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n\r\n        0\r\n      );\r\n\r\n      setItemFunc(\r\n        state.cartItems.map((item) => item),\r\n        state.totalAmount,\r\n        state.totalQuantity\r\n      );\r\n    },\r\n\r\n    // ========= remove item ========\r\n\r\n    removeItem(state, action) {\r\n     // console.log(action)\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) - Number(existingItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n\r\n      setItemFunc(\r\n        state.cartItems.map((item) => item),\r\n        state.totalAmount,\r\n        state.totalQuantity\r\n      );\r\n    },\r\n\r\n    //============ delete item ===========\r\n\r\n    deleteItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n      setItemFunc(\r\n        state.cartItems.map((item) => item),\r\n        state.totalAmount,\r\n        state.totalQuantity\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}